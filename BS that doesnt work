#define CAYENNE_PRINT Serial // Comment this out to disable prints and save space
//#include “High_Temp.h”
#define TINY_GSM_MODEM_SIM7000
#define CAYENNE_DEBUG

#include <CayenneMQTTGSM.h>
// This sketch uses a software serial connection.
#include <SoftwareSerial.h>
#define gsmSerial Serial1
// GSM connection info.
char apn[] = "vzwinternet"; // Access point name. Leave empty if it is not needed. i know calls and sms are disabled
char gprsLogin[] = ""; // GPRS username. Leave empty if it is not needed.
char gprsPassword[] = ""; // GPRS password. Leave empty if it is not needed.
char pin[] = ""; // SIM pin number. Leave empty if it is not needed.

// Cayenne authentication info. This should be obtained from the Cayenne Dashboard.
char username[] = "";
char password[] = "";
char clientID[] = "";

char latBuff[12], longBuff[12], locBuff[50], altBuff[12];
float lat = -113.053020080;
float lon = 50.06766842;
float alt = 1051.8;

void setup() {
Serial.begin(9600);
Serial.println("Hello ");

// Auto-detect the GSM serial baud rate. You can manually set it instead if you want to save a bit of space.
TinyGsmAutoBaud(gsmSerial);
Cayenne.begin(username, password, clientID, gsmSerial, apn, gprsLogin, gprsPassword, pin);
}

void loop() {
Cayenne.loop();

dtostrf(lat, 1, 8, latBuff); // float_val, min_width, digits_after_decimal, char_buffer
dtostrf(lon, 1, 8, longBuff);
dtostrf(alt, 1, 1, altBuff);
// Construct a combined, comma-separated location array
sprintf(locBuff, “%s,%s,%s”, latBuff, longBuff, altBuff); // This could look like “10,33.123456,-85.123456,120.5”
delay(100);
// Construct a combined, comma-separated location array
Cayenne.virtualWrite(2,locBuff,“gps”, “m”);
buffer1[0] = '[';
  size_t offset1 = 1;
  dtostrf(lat, 1, 3, &buffer1[offset1]);
  offset1 += strlen(&buffer1[offset1]);
  buffer1[offset1++] = ',';
  dtostrf(lon, 1, 3, &buffer1[offset1]);
  offset1 += strlen(&buffer1[offset1]);
  buffer1[offset1++] = ',';
  dtostrf(alt, 1, 0, &buffer1[offset1]);
  offset1 += strlen(&buffer1[offset1]);
  buffer1[offset1++] = ',';
  dtostrf(a1, 1, 0, &buffer1[offset1]);
  offset1 += strlen(&buffer1[offset1]);
  buffer1[offset1++] = ']';
  buffer1[offset1] = 0;
  Serial.println(buffer1);
}
